{"version":3,"sources":["file:///D:/Cocos/CocosSolitaireCreative/assets/scripts/crossword/Crossword.ts"],"names":["Crossword","CrosswordCell","CrosswordWord","sizeX","sizeY","words","cells","getMaxSize","build","config","lines","split","buildWordsFromLine","length","line","vertical","splits","i","wordParams","x","parseInt","y","word","cellX","j","cellY","cell","find","push","crosswordWord"],"mappings":"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","sourcesContent":["import { CrosswordCell } from \"./CrosswordCell\";\r\nimport { CrosswordWord } from \"./CrosswordWord\";\r\n\r\nexport class Crossword {\r\n\r\n    public sizeX: number;\r\n    public sizeY: number;\r\n    public words: CrosswordWord[];\r\n    public cells: CrosswordCell[];\r\n\r\n    getMaxSize(): number {\r\n        return this.sizeX > this.sizeY ? this.sizeX : this.sizeY;\r\n    }\r\n\r\n    build(config: string) {\r\n        this.sizeX = 0;\r\n        this.sizeY = 0;\r\n        this.words = [];\r\n        this.cells = [];\r\n\r\n        let lines = config.split('+');\r\n\r\n        this.buildWordsFromLine(lines[0], false);\r\n        if (lines.length > 1) this.buildWordsFromLine(lines[1], true);\r\n    }\r\n\r\n    private buildWordsFromLine(line: string, vertical: boolean) {\r\n        let splits = line.split('|');\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n\r\n            let wordParams = splits[i].split('.');\r\n            if (wordParams.length < 3) continue;\r\n\r\n            let x = parseInt(wordParams[0]);\r\n            let y = parseInt(wordParams[1]);\r\n            let word = wordParams[2];\r\n\r\n            let cells: CrosswordCell[] = [];\r\n\r\n            for (let j = 0; j < word.length; j++) {\r\n\r\n                let cellX = vertical ? x : x + j;\r\n                let cellY = vertical ? y + j : y;\r\n\r\n                let cell = this.cells.find(cell => cell.x === cellX && cell.y === cellY);\r\n                if (!cell) {\r\n                    cell = new CrosswordCell(cellX, cellY, word[j]);\r\n\r\n                    if (cell.x >= this.sizeX) this.sizeX = cell.x + 1;\r\n                    if (cell.y >= this.sizeY) this.sizeY = cell.y + 1;\r\n\r\n                    this.cells.push(cell);\r\n                }\r\n\r\n                cells.push(cell);\r\n            }\r\n\r\n            let crosswordWord = new CrosswordWord(word, vertical, cells);\r\n            this.words.push(crosswordWord);            \r\n        }\r\n    }\r\n}\r\n"]}