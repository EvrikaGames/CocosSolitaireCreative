{"version":3,"sources":["file:///D:/Cocos/work/CocosSolitaireCreative/assets/scripts/solitaire/GameController.ts"],"names":["_decorator","Component","instantiate","Label","Node","Prefab","resources","TextAsset","tween","UIOpacity","Vec3","Card","Word","Letter","Blocker","StoreButtonComponent","ResultScreen","SoundController","ccclass","property","GameController","type","predefinedDeck","predefinedWords","predefinedSentences","predefinedWordStrings","currentWord","currentWordIndex","currentSentenceIndex","completedWords","letterSlots","currentLetterIndex","cards","onLoad","start","blockerComponent","blocker","getComponent","console","warn","loadSentences","Promise","resolve","reject","load","err","textAsset1","log","message","buildSentences","text","loadLetters","textAsset","buildWords","loadCards","buildCards","all","then","createCards","sentenceLabel","string","createCompletedWords","createSlots","catch","error","config","centencesSplits","split","i","length","push","replace","toString","wordsSplits","forEach","element","buf","letters","completed","mass","elements","str","deck","j","letter","position","revealed","n","pile","cardData","cardNode","cardPrefab","card","setPosition","getCardPosition","init","setNum","cardContainer","addChild","node","emit","VARIANTS_UPDATED","pileIndex","cardIndex","completedWordNode","completedWordPrefab","getCompletedWordPosition","completedWordContainer","selectWord","yPos","len","letterSlotNode","letterSlotPrefab","letterSlot","getSlotPosition","letterSlotContainer","deleteSlots","slot","remove","num","moveCardToWord","isSelected","setCard","sound","play","hint","getNumber","undefined","label","reveal","showBlocker","timeLetterSlots","setTimeout","isWordRight","repeatWordEndAnimation","resultScreen","show","correct","setString","moveCardsToCompleteWord","changeSentence","hideBlocker","toWrongColor","wrong","moveCardToInitialPosition","getCard","activateButtonStore","storeButtonComponent","storeButtonNode","onClick","repeatWordAnimation","currentCard","returnCardToPosition","hide","getCorrectVariant","isOccupied","isRight","isRevealed","uiOpacity","addComponent","opacity","vec","vec1","to","endPosition","call","startPosition","delay","targetNode","worldPos","getWorldPosition","index","moveToCompleteWord","VARIANT_SELECTED"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, instantiate, Label, Node, Prefab, resources, TextAsset, tween, UIOpacity, UITransform, Vec2, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport Card from './Card';\r\nimport { ICardData } from './ICardData';\r\nimport { IWordData } from './IWordData';\r\nimport { Word } from './Word';\r\nimport { Letter } from './Letter';\r\nimport { Blocker } from './Blocker';\r\nimport { StoreButtonComponent } from '../ui/StoreButtonComponent';\r\nimport { ResultScreen } from './ResultScreen';\r\nimport { SoundController } from '../sound/SoundController';\r\n\r\n@ccclass\r\nexport default class GameController extends Component {\r\n    \r\n    public static readonly VARIANTS_UPDATED = \"variants_updated\";\r\n    public static readonly VARIANT_SELECTED = \"variant_selected\";\r\n\r\n    @property(Node)\r\n    blocker: Node = null;\r\n\r\n    @property(Label)\r\n    sentenceLabel: Label;\r\n\r\n    @property(Prefab)\r\n    cardPrefab: Prefab = null;\r\n\r\n    @property(Node)\r\n    cardContainer: Node = null;\r\n\r\n    @property(Prefab)\r\n    completedWordPrefab: Prefab = null;\r\n\r\n    @property(Node)\r\n    completedWordContainer: Node = null;\r\n\r\n    @property(Prefab)\r\n    letterSlotPrefab: Prefab = null;\r\n\r\n    @property(Node)\r\n    letterSlotContainer: Node = null;\r\n\r\n    @property(Node)\r\n    startPosition: Node = null;\r\n    @property(Node)\r\n    endPosition: Node = null;\r\n\r\n    @property({ type: Node })\r\n    private storeButtonNode: Node = null;\r\n\r\n    @property(ResultScreen)\r\n    resultScreen: ResultScreen = null;\r\n    \r\n    @property({type:SoundController})\r\n    private sound = null;\r\n\r\n\r\n\r\n    predefinedDeck: ICardData[][] = [];\r\n\r\n    predefinedWords: IWordData[] = [];\r\n\r\n    predefinedSentences: string[] = [];\r\n\r\n    predefinedWordStrings: string[] = [];\r\n\r\n    currentWord: string[] = [];\r\n    currentWordIndex: number = 0;\r\n    currentSentenceIndex: number = 0;\r\n    completedWords: Word[] = [];\r\n    letterSlots: Letter[] = [];\r\n    currentLetterIndex: number = 0;\r\n\r\n    cards: Card[] = [];\r\n\r\n    onLoad() {\r\n        \r\n        \r\n    }\r\n    protected start(): void {\r\n        const blockerComponent = this.blocker.getComponent(Blocker);\r\n        if (!blockerComponent) {\r\n            console.warn(\"Blocker component is missing!\");\r\n            return;\r\n        }\r\n    \r\n        const loadSentences: Promise<void> = new Promise((resolve, reject) => {\r\n            resources.load(\"configs/sentences\", TextAsset, (err, textAsset1) => {\r\n                if (err) {\r\n                    console.log(\"Error loading letters-en:\", err.message);\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                this.buildSentences(textAsset1.text);\r\n                resolve();\r\n            });\r\n        });\r\n    \r\n        const loadLetters: Promise<void> = new Promise((resolve, reject) => {\r\n            resources.load(\"configs/words\", TextAsset, (err, textAsset) => {\r\n                if (err) {\r\n                    console.log(\"Error loading letters:\", err.message);\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                this.buildWords(textAsset.text);\r\n                resolve();\r\n            });\r\n        });\r\n        const loadCards: Promise<void> = new Promise((resolve, reject) => {\r\n            resources.load(\"configs/cards\", TextAsset, (err, textAsset) => {\r\n                if (err) {\r\n                    console.log(\"Error loading letters:\", err.message);\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                this.buildCards(textAsset.text);\r\n                resolve();\r\n            });\r\n        });\r\n    \r\n        Promise.all([loadSentences, loadLetters, loadCards]).then(() => {\r\n            this.createCards();\r\n            console.log(this.predefinedSentences);\r\n            console.log(this.predefinedSentences[this.currentSentenceIndex]);\r\n            this.sentenceLabel.string = this.predefinedSentences[this.currentSentenceIndex];\r\n            this.createCompletedWords();\r\n            this.createSlots();\r\n        }).catch((error) => {\r\n            console.error(\"Error loading resources:\", error);\r\n        });\r\n    }\r\n    \r\n    private buildSentences(config: string) {\r\n        this.predefinedSentences = [];\r\n        let centencesSplits = config.split('\\n');\r\n\r\n        for (let i = 0; i < centencesSplits.length; i++) {\r\n            this.predefinedSentences.push(centencesSplits[i].replace('\\r', '').toString());\r\n        }\r\n        console.log(this.predefinedSentences);\r\n    }\r\n    private buildWords(config: string) {\r\n        this.predefinedWordStrings = [];\r\n        const wordsSplits = config.split('\\n');\r\n\r\n        for (let i = 0; i < wordsSplits.length; i++) {\r\n            this.predefinedWordStrings.push(wordsSplits[i]);\r\n        }\r\n        this.predefinedWords = [];\r\n        this.predefinedWordStrings.forEach(element => {\r\n            let buf: IWordData = {letters: element.replace('\\r', '').split(''), completed: false};\r\n            this.predefinedWords.push(buf);\r\n        });\r\n        console.log(this.predefinedWords);\r\n    }\r\n    private buildCards(config: string){\r\n        this.predefinedDeck = [];\r\n        let mass = config.split('\\n');\r\n        let elements:string[] = [];\r\n        mass.forEach(str => {\r\n            elements.push(str.replace('\\r', ''));\r\n        });\r\n        for(let i = 0; i < elements.length; i++){\r\n            let deck: ICardData[] = [];\r\n            for(let j = 0; j < elements[i].length; j++){\r\n                deck.push({letter: elements[i][j], position: i + 1, revealed: false});\r\n            }\r\n            deck[deck.length - 1].revealed = true;\r\n            this.predefinedDeck.push(deck);\r\n        }\r\n        console.log(this.predefinedDeck);\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n    createCards() {\r\n        let n = 0;\r\n        for (let i = 0; i < this.predefinedDeck.length; i++) {\r\n            const pile = this.predefinedDeck[i];\r\n            for (let j = 0; j < pile.length; j++) {\r\n                const cardData = pile[j];\r\n                const cardNode = instantiate(this.cardPrefab);\r\n                const card = cardNode.getComponent(Card);\r\n                cardNode.setPosition(this.getCardPosition(i, j));\r\n                card.init(cardData);\r\n                card.setNum(n++);\r\n                this.cardContainer.addChild(cardNode);\r\n                this.cards.push(card);\r\n            }\r\n        }\r\n        this.node.emit(GameController.VARIANTS_UPDATED, { });\r\n    }\r\n\r\n    getCardPosition(pileIndex: number, cardIndex: number): Vec3 {\r\n        return new Vec3(pileIndex * 120, cardIndex * -30, 0);\r\n    }\r\n\r\n    createCompletedWords(){\r\n        for (let j = 0; j < this.predefinedWords.length; j++) {\r\n            const completedWordNode = instantiate(this.completedWordPrefab);\r\n            this.completedWords.push(completedWordNode.getComponent(Word));\r\n            completedWordNode.setPosition(this.getCompletedWordPosition(j, j % 2 == 0 ? j : j - 1));\r\n            this.completedWordContainer.addChild(completedWordNode);\r\n        }\r\n        this.completedWords[this.currentWordIndex].selectWord();\r\n    }\r\n    getCompletedWordPosition(pileIndex: number, yPos: number): Vec3 {\r\n        return new Vec3((pileIndex % 2) * 212, yPos * -34);\r\n    }\r\n\r\n    createSlots(){\r\n        let len = this.predefinedWords[this.currentWordIndex].letters.length;\r\n        for(let i = 0; i < len; i++){\r\n            const letterSlotNode = instantiate(this.letterSlotPrefab);\r\n            const letterSlot = letterSlotNode.getComponent(Letter);\r\n            letterSlot.init(this.predefinedWords[this.currentWordIndex].letters[i]);\r\n            this.letterSlots.push(letterSlot);\r\n            letterSlotNode.setPosition(this.getSlotPosition(i, len));\r\n            this.letterSlotContainer.addChild(letterSlotNode);\r\n        }\r\n    }\r\n    deleteSlots(){\r\n        this.letterSlots.forEach(slot => {\r\n            slot.remove();\r\n        });\r\n    }\r\n    getSlotPosition(num: number, len: number): Vec3 {\r\n        return new Vec3(len % 2 == 0 ? (num < len / 2 ? ((len / 2 - 1 / 2 - num) * -92) : ((num - len / 2 + 1 / 2) * 92)) : (num < len / 2 ? \r\n            ((len / 2 - 1 / 2 - num) * -92) : (num - (len / 2 - 1 /2)) * 92), 0, 0);\r\n    }\r\n\r\n    moveCardToWord(card: Card){\r\n        if(card.isSelected == false)\r\n        {\r\n            this.letterSlots[this.currentLetterIndex].setCard(card);\r\n            this.sound.play(this.sound.hint);\r\n            if(this.cards[card.getNumber() - 1] != undefined && this.cards[card.getNumber() - 1].label != null){\r\n                this.cards[card.getNumber() - 1].reveal();\r\n            }\r\n            this.currentLetterIndex++;\r\n            const blockerComponent = this.blocker.getComponent(Blocker);\r\n            if(this.currentLetterIndex >= this.letterSlots.length){\r\n                blockerComponent.showBlocker();\r\n                let timeLetterSlots: number = 0;\r\n                setTimeout(() => {\r\n                    if(this.isWordRight()){\r\n                        this.letterSlots.forEach(slot => {\r\n                            slot.repeatWordEndAnimation();\r\n                        });\r\n                        blockerComponent.showBlocker();\r\n                        this.resultScreen.show(true);\r\n                        this.sound.play(this.sound.correct);\r\n                        setTimeout(() => {\r\n                        this.completedWords[this.currentWordIndex].setString(this.predefinedWordStrings[this.currentWordIndex]);\r\n                        this.completedWords[this.currentWordIndex].selectWord();\r\n                        this.currentWordIndex++;\r\n                        this.moveCardsToCompleteWord();\r\n                        timeLetterSlots = this.letterSlots.length * 50;\r\n                        setTimeout(() => {\r\n                            this.deleteSlots();\r\n                            this.letterSlots = [];\r\n                            this.createSlots();\r\n                            this.currentLetterIndex = 0;\r\n                            this.changeSentence();\r\n                            blockerComponent.hideBlocker();\r\n                        }, timeLetterSlots);\r\n                    }, 500);\r\n\r\n                    } else {\r\n                        this.letterSlots.forEach(slot => {\r\n                            slot.toWrongColor();\r\n                            slot.repeatWordEndAnimation();\r\n                        });\r\n                        this.sound.play(this.sound.wrong);\r\n                        blockerComponent.showBlocker();\r\n                        setTimeout(() => {\r\n                            this.letterSlots.forEach(slot => {\r\n                                this.moveCardToInitialPosition(slot.getCard()); \r\n                            });\r\n                            this.currentLetterIndex = 0;\r\n                            blockerComponent.hideBlocker();\r\n                        }, 1500);\r\n                    }\r\n                    setTimeout(() => {\r\n                        console.log(this.currentWordIndex);\r\n                        if(this.currentWordIndex > 4){\r\n                            blockerComponent.showBlocker();\r\n                            console.log(\"BLocker\");\r\n                            this.blocker.getComponent(Blocker).activateButtonStore();\r\n                            const storeButtonComponent = this.storeButtonNode.getComponent(StoreButtonComponent);\r\n                            if (storeButtonComponent) {\r\n                            storeButtonComponent.onClick();\r\n                            } else {\r\n                                console.warn(\"StoreButtonComponent not found on the provided node!\");\r\n                            }\r\n                        }\r\n                    }, 750 + timeLetterSlots);\r\n                    \r\n                }, this.letterSlots.length * 50);\r\n            } else {\r\n                this.letterSlots[this.currentLetterIndex - 1].repeatWordAnimation();\r\n                card.isSelected = true;\r\n            }\r\n   \r\n        }else{\r\n            for(let i = this.currentLetterIndex - 1; i >= 0; i--){\r\n                let currentCard = this.letterSlots[i].getCard();\r\n                currentCard.isSelected = false;\r\n                if(currentCard == card){\r\n                    this.moveCardToInitialPosition(currentCard);\r\n                    this.currentLetterIndex--;\r\n                    break;\r\n                }else{\r\n                    this.moveCardToInitialPosition(currentCard);\r\n                    this.currentLetterIndex--;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this.node.emit(GameController.VARIANTS_UPDATED, { });\r\n    }\r\n\r\n    moveCardToInitialPosition(card: Card){\r\n        card.returnCardToPosition();\r\n        if(this.cards[card.getNumber() - 1] != undefined && this.cards[card.getNumber() - 1].label != null){\r\n            this.cards[card.getNumber() - 1].hide();\r\n        }\r\n        card.isSelected = false;\r\n    }\r\n\r\n    getCorrectVariant(): Card{\r\n        for(let i = this.currentLetterIndex - 1; i >= 0; i--){\r\n            if(this.letterSlots[i].isOccupied && this.letterSlots[i].isRight == false){\r\n                return this.letterSlots[i].getCard();\r\n            }\r\n        }\r\n        let mass: Card[] = [];\r\n        this.cards.forEach(card => {\r\n            if(card.isRevealed && card.isSelected == false){\r\n                mass.push(card);\r\n            }\r\n        });\r\n        for(let i = 0; i < mass.length; i++){\r\n            if(mass[i].label.string == this.letterSlots[this.currentLetterIndex].letter){\r\n                return mass[i];\r\n            }\r\n        }\r\n        console.error(\"No card!\");\r\n        return;\r\n    }\r\n\r\n    isWordRight(): boolean{\r\n        for(let i = 0; i < this.letterSlots.length; i++){\r\n            if(this.letterSlots[i].isRight == false)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    changeSentence(){\r\n    const uiOpacity = this.sentenceLabel.getComponent(UIOpacity) || this.sentenceLabel.addComponent(UIOpacity);\r\n    uiOpacity.opacity = 255;\r\n\r\n    let vec = new Vec3(30, 0, 0);\r\n    let vec1 = new Vec3(-30, 0, 0);\r\n\r\n    // Анимация позиции узла\r\n    tween(this.sentenceLabel.node)\r\n        .to(0.3, { position: vec1 })\r\n        .to(0.5, { position: this.endPosition.position })\r\n        .call(() => {\r\n            this.sentenceLabel.string = this.predefinedSentences[this.currentWordIndex];\r\n            this.sentenceLabel.node.position = new Vec3(this.startPosition.position);\r\n\r\n            tween(this.sentenceLabel.node)\r\n                .to(0.8, { position: vec })\r\n                .to(0.2, {position: new Vec3(0, 0, 0)})\r\n                .start();\r\n        })\r\n        .start();\r\n\r\n    // Анимация прозрачности\r\n    tween(uiOpacity)\r\n        .to(0.5, { opacity: 0 })\r\n        .delay(0.6)\r\n        .call(() => {\r\n            tween(uiOpacity)\r\n                .to(1, { opacity: 255 })\r\n                .start();\r\n        })\r\n        .start();\r\n    }\r\n\r\n\r\n    moveCardsToCompleteWord(){\r\n        let targetNode = this.completedWords[this.currentWordIndex - 1].node;\r\n\r\n        let worldPos: Vec3 = targetNode.getWorldPosition();\r\n\r\n        this.letterSlots.forEach((slot, index) => {\r\n            setTimeout(() => {\r\n            slot.getCard().moveToCompleteWord(worldPos);\r\n            }, 50 * index);\r\n        });\r\n    }\r\n\r\n}\r\n"]}