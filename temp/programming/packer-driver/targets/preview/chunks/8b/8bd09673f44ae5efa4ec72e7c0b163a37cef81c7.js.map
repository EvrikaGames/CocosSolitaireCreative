{"version":3,"sources":["file:///D:/Cocos/CocosWordLineCreative/assets/scripts/quiz/QuizVariant.ts"],"names":["_decorator","Color","Component","Label","Sprite","ccclass","property","QuizVariant","type","correctColor","uncorrectColor","index","isCorrect","isClicked","isBlocked","defaultColor","onLoad","checkSprite","color","set","word","block","wordLabel","string","reset","onButtonClicked","node","emit","SELECTED_EVENT"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;;;;;;;;;OACxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGjBO,W,WADZF,OAAO,CAAC,aAAD,C,UAQHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL;AAAP,OAAD,C,UAGRG,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEJ;AAAP,OAAD,C,sCAXb,MACaG,WADb,SACiCL,SADjC,CAC2C;AAAA;AAAA;AAAA,eAItBO,YAJsB,GAIA,IAAIR,KAAJ,CAAU,CAAV,EAAa,GAAb,EAAkB,CAAlB,CAJA;AAAA,eAKtBS,cALsB,GAKE,IAAIT,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,CALF;;AAAA;;AAAA;;AAAA,eAa/BU,KAb+B;AAAA,eAc/BC,SAd+B;AAAA,eAe/BC,SAf+B;AAAA,eAgB/BC,SAhB+B;AAAA,eAkB/BC,YAlB+B;AAAA;;AAoBvCC,QAAAA,MAAM,GAAG;AACL,eAAKD,YAAL,GAAoB,IAAId,KAAJ,CAAU,KAAKgB,WAAL,CAAiBC,KAA3B,CAApB;AACH;;AAEDC,QAAAA,GAAG,CAACC,IAAD,EAAeT,KAAf,EAA8BC,SAA9B,EAAkD;AAEjD,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKQ,KAAL,CAAW,KAAX;AAEA,eAAKV,KAAL,GAAaA,KAAb;AACA,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKU,SAAL,CAAeC,MAAf,GAAwBH,IAAxB;AACH;;AAEDI,QAAAA,KAAK,GAAG;AACJ,eAAKP,WAAL,CAAiBC,KAAjB,GAAyB,KAAKH,YAA9B;AACA,eAAKF,SAAL,GAAiB,KAAjB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDW,QAAAA,eAAe,GAAG;AAEd,cAAI,KAAKZ,SAAL,IAAkB,KAAKC,SAA3B,EACA;AAEA,eAAKD,SAAL,GAAiB,IAAjB;AACA,eAAKI,WAAL,CAAiBC,KAAjB,GAAyB,KAAKN,SAAL,GAAiB,KAAKH,YAAtB,GAAqC,KAAKC,cAAnE;AACA,eAAKgB,IAAL,CAAUC,IAAV,CAAepB,WAAW,CAACqB,cAA3B,EAA2C;AAAEjB,YAAAA,KAAK,EAAE,KAAKA;AAAd,WAA3C;AACH;;AAEDU,QAAAA,KAAK,CAACP,SAAD,EAAqB;AACtB,eAAKA,SAAL,GAAiBA,SAAjB;AACH;;AApDsC,O,UAEhBc,c,GAAyB,U;;;;;iBAM5B,I;;;;;;;iBAGE,I","sourcesContent":["import { _decorator, Color, Component, Label, Sprite, } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('QuizVariant')\r\nexport class QuizVariant extends Component {\r\n    \r\n    public static readonly SELECTED_EVENT: string = \"selected\";\r\n\r\n    private readonly correctColor: Color = new Color(0, 255, 0);\r\n    private readonly uncorrectColor: Color = new Color(255, 0, 0);\r\n\r\n    @property({type: Label})\r\n    private wordLabel = null;\r\n\r\n    @property({type: Sprite})\r\n    private checkSprite = null;\r\n\r\n    private index: number;\r\n    private isCorrect: boolean;\r\n    private isClicked: boolean;\r\n    private isBlocked: boolean;\r\n\r\n    private defaultColor: Color;\r\n\r\n    onLoad() {\r\n        this.defaultColor = new Color(this.checkSprite.color);\r\n    }\r\n\r\n    set(word: string, index: number, isCorrect: boolean) {\r\n\r\n        this.isClicked = false;\r\n        this.block(false);\r\n\r\n        this.index = index;\r\n        this.isCorrect = isCorrect;\r\n        this.wordLabel.string = word;\r\n    }\r\n\r\n    reset() {\r\n        this.checkSprite.color = this.defaultColor;\r\n        this.isClicked = false;\r\n        this.isBlocked = false;\r\n    }\r\n    \r\n    onButtonClicked() {\r\n        \r\n        if (this.isClicked || this.isBlocked)\r\n        return;\r\n    \r\n        this.isClicked = true;\r\n        this.checkSprite.color = this.isCorrect ? this.correctColor : this.uncorrectColor;\r\n        this.node.emit(QuizVariant.SELECTED_EVENT, { index: this.index });\r\n    }\r\n\r\n    block(isBlocked: boolean) {\r\n        this.isBlocked = isBlocked;\r\n    }\r\n}\r\n"]}