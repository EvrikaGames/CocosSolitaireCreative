{"version":3,"sources":["file:///D:/Cocos/CocosSolitaireCreative/assets/scripts/wordConnect/spelling/SpellingController.ts"],"names":["_decorator","Animation","Component","resources","SpriteFrame","TextAsset","tween","Node","DescriptionView","SpellingView","SpellingData","CorrectLabelComponent","super_html_playable","ccclass","property","SpellingController","type","changeLevelClipName","currentLevelIndex","levelsData","start","redirectScreen","active","load","err","textAsset","console","error","message","buildSpelling","text","applyLevelData","onLoad","spellingView","node","on","VARIANT_SELECTED","onSomeVariantSelected","onDestroy","off","config","levels","split","i","length","level","build","push","data","pathToImage","spriteFrame","descriptionView","setNext","set","currentWord","wordVariants","correctVariantIndex","event","index","game_end","download","block","spellingTweens","uncoverWord","getCorrectWord","correctLabelTween","correctlabel","show","allTweens","tweensComplete","forEach","t","call","showNextLevel","changeLevelDelay","animation","getState","clip","duration","delay"],"mappings":"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","sourcesContent":["import { _decorator, Animation, Component, resources, SpriteFrame, TextAsset, tween, Tween, Node } from 'cc';\r\nimport { DescriptionView } from '../description/DescriptionView';\r\nimport { SpellingView } from './SpellingView';\r\nimport { SpellingData } from './SpellingData';\r\nimport { CorrectLabelComponent } from '../CorrectLabelComponent';\r\nimport super_html_playable from '../../services/super_html_playable';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpellingController')\r\nexport class SpellingController extends Component {\r\n\r\n    private readonly changeLevelClipName = \"changeLevel\";\r\n\r\n    @property({type:DescriptionView})\r\n    private descriptionView = null;\r\n\r\n    @property({type:SpellingView})\r\n    private spellingView = null;\r\n\r\n    @property({type:CorrectLabelComponent})\r\n    private correctlabel = null;\r\n\r\n    @property({type:Animation})\r\n    private animation = null;\r\n\r\n    @property({type:Node})\r\n    private redirectScreen = null;\r\n\r\n    private currentLevelIndex: number;\r\n    private levelsData: SpellingData[];\r\n\r\n    start() {\r\n        this.redirectScreen.active = false;\r\n        resources.load(\"configs/wordConnectConfig\", TextAsset, (err, textAsset) => {\r\n\r\n            if (err) {\r\n                console.error(err.message);\r\n                return;\r\n            }\r\n\r\n            this.buildSpelling(textAsset.text);\r\n            \r\n            this.currentLevelIndex = 0;\r\n            this.applyLevelData();\r\n        });\r\n    }\r\n\r\n    onLoad() {\r\n        this.spellingView.node.on(SpellingView.VARIANT_SELECTED, this.onSomeVariantSelected, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.spellingView.node.off(SpellingView.VARIANT_SELECTED, this.onSomeVariantSelected, this);\r\n    }\r\n\r\n    private buildSpelling(config: string) {\r\n\r\n        this.levelsData = [];\r\n\r\n        let levels = config.split('\\n');\r\n\r\n        for(let i = 0; i < levels.length; i++) {\r\n            let level: SpellingData = new SpellingData();\r\n            level.build(levels[i]);\r\n            this.levelsData.push(level);\r\n        }\r\n    }\r\n\r\n    private applyLevelData() {\r\n\r\n        let data: SpellingData = this.levelsData[this.currentLevelIndex];\r\n\r\n        resources.load(data.pathToImage+'/spriteFrame', SpriteFrame, (err, spriteFrame) => {\r\n\r\n            if (err) {\r\n                console.error(err.message);\r\n                return;\r\n            }\r\n\r\n            this.descriptionView.setNext(this.currentLevelIndex + 1, spriteFrame);\r\n            this.spellingView.set(data.currentWord, data.wordVariants, data.correctVariantIndex);\r\n        });\r\n    }\r\n\r\n    private onSomeVariantSelected(event) {\r\n\r\n        const index = event.index;\r\n\r\n        if (index != this.levelsData[this.currentLevelIndex].correctVariantIndex)\r\n            return;\r\n\r\n        if (this.currentLevelIndex === this.levelsData.length - 1) {\r\n            this.redirectScreen.active = true;\r\n            super_html_playable.game_end();\r\n            super_html_playable.download();\r\n            return;\r\n        }\r\n\r\n        this.spellingView.block(true);\r\n\r\n        let spellingTweens: Tween<Node>[] = this.spellingView.uncoverWord(this.levelsData[this.currentLevelIndex].getCorrectWord());\r\n        let correctLabelTween: Tween<Node> = this.correctlabel.show();\r\n\r\n        let allTweens = spellingTweens;\r\n        allTweens.push(correctLabelTween);\r\n\r\n        let tweensComplete:number = 0;\r\n\r\n        allTweens.forEach(t => {\r\n            t.call(() => {\r\n                tweensComplete = tweensComplete + 1;\r\n\r\n                if (tweensComplete === allTweens.length)\r\n                    this.showNextLevel();\r\n            })\r\n            .start();\r\n        });\r\n    }\r\n\r\n    private showNextLevel() {\r\n\r\n        const changeLevelDelay = this.animation.getState(this.changeLevelClipName).clip.duration / 2;\r\n\r\n        tween(this.node)\r\n            .delay(changeLevelDelay)\r\n            .call(() => {\r\n                this.currentLevelIndex = this.currentLevelIndex + 1;\r\n                this.applyLevelData();\r\n            })\r\n            .start();\r\n    }\r\n}\r\n"]}