{"version":3,"sources":["file:///D:/Cocos/CocosSolitaireCreative/assets/scripts/solitaire/TutorialHandMover.ts"],"names":["_decorator","Component","Node","Quat","tween","Vec3","GameController","ccclass","property","TutorialHandMover","type","timeToActivate","shouldActivate","remainingTime","to","toScaleTween","rotationTween","toScaleYellowTween","backYellow","onLoad","game","node","on","VARIANTS_UPDATED","shouldShowHand","VARIANT_SELECTED","hideHand","onDestroy","off","start","hand","active","firstTarget","update","deltaTime","moveHand","moveDelay","scaleToNormal","correctVariant","getCorrectVariant","eulerAngles","setWorldPosition","getWorldPosition","scale","union","repeatForever","ONE","z","stop","setScale","setRotation"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Quat, tween, Tween, Vec3 } from 'cc';\r\nimport GameController from './GameController';\r\nimport Card from './Card';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TutorialHandMover')\r\nexport class TutorialHandMover extends Component {\r\n    \r\n    private readonly timeToActivate: number = 4;\r\n\r\n    @property({type: GameController})\r\n    private game: GameController = null;\r\n\r\n    @property({type: Node})\r\n    private hand: Node = null;\r\n    \r\n    @property({type: Node})\r\n    private firstTarget: Node = null;\r\n\r\n    private shouldActivate: boolean;\r\n    private remainingTime: number;\r\n    private to: Node;\r\n    private toScaleTween: Tween<Node>;\r\n    private rotationTween: Tween<Node>;\r\n    private toScaleYellowTween: Tween<Node>;\r\n\r\n    private backYellow: Node;\r\n\r\n    onLoad() {\r\n        this.game.node.on(GameController.VARIANTS_UPDATED, this.shouldShowHand, this);\r\n        this.game.node.on(GameController.VARIANT_SELECTED, this.hideHand, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.game.node.off(GameController.VARIANTS_UPDATED, this.shouldShowHand, this);\r\n        this.game.node.off(GameController.VARIANT_SELECTED, this.hideHand, this);\r\n    }\r\n\r\n    start() {\r\n        this.hand.active = false;\r\n        this.shouldActivate = false;\r\n        this.to = this.firstTarget;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n        if (!this.shouldActivate)\r\n            return;\r\n\r\n        this.remainingTime -= deltaTime;\r\n        \r\n        if (this.remainingTime > 0)\r\n            return;\r\n\r\n        this.shouldActivate = false;\r\n        this.moveHand();\r\n    }\r\n\r\n    private moveHand() {\r\n        this.hand.active = true;\r\n\r\n        const moveDelay = 0.5;\r\n        const scaleToNormal = 0.5;\r\n        let correctVariant = this.game.getCorrectVariant();\r\n\r\n        if (correctVariant) {\r\n            this.to = correctVariant.node;\r\n            this.to.eulerAngles = new Vec3(0, 0, 0);\r\n            this.backYellow = correctVariant.backYellow;\r\n            this.backYellow.active = true;\r\n\r\n            this.hand.setWorldPosition(this.firstTarget.getWorldPosition());\r\n            this.hand.setWorldPosition(this.to.getWorldPosition());\r\n            /*tween(this.hand)\r\n                .to(0.2, { worldPosition: this.to.getWorldPosition() })\r\n                .start();*/\r\n            tween(this.hand)\r\n                .to(0.5, { scale: new Vec3(0.8, 0.8) })\r\n                .to(0.5, {scale: new Vec3(0.7, 0.7)})\r\n                .union()\r\n                .repeatForever()\r\n                .start();\r\n\r\n            this.toScaleTween = tween(this.to)\r\n                .to(moveDelay, { scale: new Vec3(1.1, 1.1) })\r\n                .to(scaleToNormal, { scale: Vec3.ONE })\r\n                .union()\r\n                .repeatForever()\r\n                .start();\r\n\r\n            this.rotationTween = tween(this.to)\r\n                .to(0.3, { eulerAngles: new Vec3(0, 0, this.to.eulerAngles.z + 10) })\r\n                .to(0.3, { eulerAngles: new Vec3(0, 0, this.to.eulerAngles.z - 10) })\r\n                .union()\r\n                .repeatForever()\r\n                .start();\r\n            this.toScaleYellowTween = tween(this.backYellow)\r\n                .to(0.3, { scale: new Vec3(0.8, 0.8) })\r\n                .to(0.3, { scale: new Vec3(0.6, 0.6) })\r\n                .union()\r\n                .repeatForever()\r\n                .start()\r\n            \r\n        }\r\n    }\r\n\r\n    private shouldShowHand() {\r\n        if(this.toScaleTween){\r\n            this.hideHand();\r\n        }\r\n        this.hand.active = false;\r\n        this.shouldActivate = true;\r\n        this.remainingTime = this.timeToActivate;\r\n    }\r\n\r\n    private hideHand() {\r\n        if (this.toScaleTween) {\r\n            this.toScaleTween.stop();\r\n        }\r\n\r\n        if (this.rotationTween) {\r\n            this.rotationTween.stop();\r\n        }\r\n        if(this.toScaleYellowTween){\r\n            this.toScaleYellowTween.stop();\r\n        }\r\n\r\n        if (this.to) {\r\n            this.to.setScale(Vec3.ONE);\r\n            this.to.setRotation(new Quat(0, 0, 0));\r\n        }\r\n\r\n        this.hand.active = false;\r\n        this.shouldActivate = false;\r\n        this.backYellow.active = false;\r\n    }\r\n}"]}