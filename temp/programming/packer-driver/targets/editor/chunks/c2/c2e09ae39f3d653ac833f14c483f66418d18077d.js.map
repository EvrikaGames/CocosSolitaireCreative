{"version":3,"sources":["file:///D:/Cocos/CocosSolitaireCreative/assets/scripts/solitaire/Letter.ts"],"names":["_decorator","Color","Component","Sprite","tween","Vec3","ccclass","property","Letter","type","correctColor","uncorrectColor","letter","isRight","isOccupied","card","defaultColor","targetColor","onLoad","checkSprite","color","CompareLetters","getLetter","init","setCard","isSelected","moveTo","node","getWorldPosition","remove","destroy","getCard","repeatWordAnimation","delay","call","to","scale","x","y","start","repeatWordEndAnimation","toDefaultColor","toRightColor","toWrongColor"],"mappings":"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","sourcesContent":["import { _decorator, color, Color, Component, Node, Sprite, tween, Vec3 } from 'cc';\r\nimport Card from './Card';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Letter')\r\nexport class Letter extends Component {\r\n    private readonly correctColor: Color = new Color(0, 255, 0, 255);\r\n    private readonly uncorrectColor: Color = new Color(255, 0, 0, 255);\r\n\r\n    letter: string;\r\n    isRight: boolean = false;\r\n    isOccupied: boolean = false;\r\n    private card: Card = null;\r\n\r\n    @property({type: Sprite})\r\n    private checkSprite = null;\r\n\r\n    private defaultColor: Color;\r\n    private targetColor: Color;\r\n\r\n    onLoad() {\r\n        this.defaultColor = new Color(this.checkSprite.color);\r\n    }\r\n\r\n    CompareLetters(card: Card){\r\n        if(card.getLetter() == this.letter){\r\n            this.isRight = true;\r\n            this.targetColor = this.correctColor;\r\n        } else{\r\n            this.isRight = false;\r\n            this.targetColor = this.uncorrectColor;\r\n        }\r\n\r\n    }\r\n    init(letter: string){\r\n        this.letter = letter;\r\n        this.isRight = false;\r\n        this.isOccupied = false;\r\n    }\r\n    setCard(card: Card){\r\n        this.card = card;\r\n        this.isOccupied = true;\r\n        this.CompareLetters(card);\r\n        card.isSelected = true;\r\n        card.moveTo(this.node.getWorldPosition());\r\n    }\r\n\r\n    remove(){\r\n        this.card = null;\r\n        this.node.destroy();\r\n        \r\n    }\r\n    getCard(){return this.card;}\r\n\r\n    repeatWordAnimation() {\r\n        tween(this.node)\r\n        .delay(0.2)\r\n        .call(() => {\r\n            this.checkSprite.color = this.targetColor;\r\n        })\r\n        .to(0.1, {scale : new Vec3(this.node.scale.x + 0.2, this.node.scale.y + 0.2, 0)})\r\n        .delay(0.3)\r\n        .to(0.1, {scale : new Vec3(1, 1, 0)})\r\n        .call(() => {\r\n            this.checkSprite.color = this.defaultColor;\r\n        })\r\n        .start();\r\n    }\r\n    repeatWordEndAnimation() {\r\n        tween(this.node)\r\n        .call(() => {\r\n            this.checkSprite.color = this.targetColor;\r\n        })\r\n        .to(0.1, {scale : new Vec3(this.node.scale.x + 0.2, this.node.scale.y + 0.2, 0)})\r\n        .delay(0.3)\r\n        .to(0.1, {scale : new Vec3(1, 1, 0)})\r\n        .call(() => {\r\n            this.checkSprite.color = this.defaultColor;\r\n        })\r\n        .start();\r\n    }\r\n    toDefaultColor(){this.checkSprite.color = this.defaultColor;}\r\n    toRightColor(){this.targetColor = this.correctColor;}\r\n    toWrongColor(){this.targetColor = this.uncorrectColor;}\r\n}\r\n\r\n\r\n"]}