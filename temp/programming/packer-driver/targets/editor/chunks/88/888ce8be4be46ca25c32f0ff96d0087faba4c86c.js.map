{"version":3,"sources":["file:///D:/Cocos/CocosWordLineCreative/assets/scripts/quiz/QuizScaler.ts"],"names":["_decorator","Component","Node","screen","Vec3","view","ResolutionPolicy","ccclass","property","QuizScaler","type","originalWidth","originalHeigth","variantsVerticalOffset","originalRatio","horizontalState","originalDescriptionPosition","originalVariantsPosition","start","description","getPosition","variants","onWindowResize","windowSize","width","height","onLoad","on","onDestroy","off","currentHorizontalState","setDesignResolutionSize","FIXED_WIDTH","setPosition","FIXED_HEIGHT","pos","y","x","ratio","scale","setScale"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,gB,OAAAA,gB;;;;;;;;;OAC1D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;4BAGjBS,U,WADZF,OAAO,CAAC,YAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACR;AAAN,OAAD,C,UAGRM,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACR;AAAN,OAAD,C,2BANb,MACaO,UADb,SACgCR,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAQ9BU,aAR8B,GAQN,IARM;AAAA,eAS9BC,cAT8B,GASL,GATK;AAAA,eAW9BC,sBAX8B,GAWG,EAXH;AAAA,eAa9BC,aAb8B,GAaN,KAAKF,cAAL,GAAsB,KAAKD,aAbrB;AAAA,eAc9BI,eAd8B,GAcH,IAdG;AAAA,eAgB9BC,2BAhB8B;AAAA,eAiB9BC,wBAjB8B;AAAA;;AAmBtCC,QAAAA,KAAK,GAAG;AACJ,eAAKF,2BAAL,GAAmC,KAAKG,WAAL,CAAiBC,WAAjB,EAAnC;AACA,eAAKH,wBAAL,GAAgC,KAAKI,QAAL,CAAcD,WAAd,EAAhC;AAEA,eAAKE,cAAL,CAAoBnB,MAAM,CAACoB,UAAP,CAAkBC,KAAtC,EAA6CrB,MAAM,CAACoB,UAAP,CAAkBE,MAA/D;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACLvB,UAAAA,MAAM,CAACwB,EAAP,CAAU,eAAV,EAA2B,KAAKL,cAAhC,EAAgD,IAAhD;AACH;;AAEDM,QAAAA,SAAS,GAAG;AACRzB,UAAAA,MAAM,CAAC0B,GAAP,CAAW,eAAX,EAA4B,KAAKP,cAAjC,EAAiD,IAAjD;AACH;;AAGDA,QAAAA,cAAc,CAACE,KAAD,EAAgBC,MAAhB,EAAgC;AAC1C,gBAAMK,sBAAsB,GAAGN,KAAK,IAAIC,MAAxC;;AAEA,cAAIK,sBAAsB,IAAI,KAAKf,eAAnC,EAAoD;AAEhD,iBAAKA,eAAL,GAAuBe,sBAAvB;;AAEA,gBAAIA,sBAAJ,EAA4B;AACxBzB,cAAAA,IAAI,CAAC0B,uBAAL,CAA6B,KAAKpB,aAAlC,EAAiD,KAAKC,cAAtD,EAAsEN,gBAAgB,CAAC0B,WAAvF;AAEA,mBAAKb,WAAL,CAAiBc,WAAjB,CAA6B,KAAKjB,2BAAlC;AACA,mBAAKK,QAAL,CAAcY,WAAd,CAA0B,KAAKhB,wBAA/B;AACH,aALD,MAMK;AACDZ,cAAAA,IAAI,CAAC0B,uBAAL,CAA6B,KAAKnB,cAAlC,EAAkD,KAAKD,aAAvD,EAAsEL,gBAAgB,CAAC4B,YAAvF;AAEA,kBAAIC,GAAG,GAAG,IAAI/B,IAAJ,CAAS,KAAKY,2BAAL,CAAiCoB,CAA1C,EAA6C,CAAC,KAAKpB,2BAAL,CAAiCqB,CAA/E,CAAV;AACA,mBAAKlB,WAAL,CAAiBc,WAAjB,CAA6BE,GAA7B;AAEAA,cAAAA,GAAG,GAAG,IAAI/B,IAAJ,CAAS,CAAT,EAAY,KAAKS,sBAAL,GAA8B,KAAKI,wBAAL,CAA8BoB,CAAxE,CAAN;AACA,mBAAKhB,QAAL,CAAcY,WAAd,CAA0BE,GAA1B;AACH;AACJ;;AAED,gBAAMG,KAAK,GAAGR,sBAAsB,GAAGL,MAAM,GAAGD,KAAZ,GAAoBA,KAAK,GAAGC,MAAhE;AACA,cAAIc,KAAK,GAAGD,KAAK,GAAG,KAAKxB,aAAzB;AACA,cAAIyB,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAG,CAAR;AAEf,eAAKpB,WAAL,CAAiBqB,QAAjB,CAA0BD,KAA1B,EAAiCA,KAAjC;AACA,eAAKlB,QAAL,CAAcmB,QAAd,CAAuBD,KAAvB,EAA8BA,KAA9B;AACH;;AAjEqC,O;;;;;iBAGhB,I;;;;;;;iBAGH,I","sourcesContent":["import { _decorator, Component, Node, screen, Vec2, Vec3, view, ResolutionPolicy, Widget } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('QuizScaler')\r\nexport class QuizScaler extends Component {\r\n\r\n    @property({type:Node})\r\n    private description = null;\r\n\r\n    @property({type:Node})\r\n    private variants = null;\r\n\r\n    private originalWidth: number = 1280;\r\n    private originalHeigth: number = 720;\r\n    \r\n    private variantsVerticalOffset: number = 30;\r\n\r\n    private originalRatio: number = this.originalHeigth / this.originalWidth;\r\n    private horizontalState: boolean = true;\r\n\r\n    private originalDescriptionPosition: Vec3;\r\n    private originalVariantsPosition: Vec3;\r\n\r\n    start() {\r\n        this.originalDescriptionPosition = this.description.getPosition();\r\n        this.originalVariantsPosition = this.variants.getPosition();\r\n        \r\n        this.onWindowResize(screen.windowSize.width, screen.windowSize.height);\r\n    }\r\n\r\n    onLoad() {\r\n        screen.on('window-resize', this.onWindowResize, this);\r\n    }\r\n    \r\n    onDestroy() {\r\n        screen.off('window-resize', this.onWindowResize, this);\r\n    }\r\n\r\n\r\n    onWindowResize(width: number, height: number) {\r\n        const currentHorizontalState = width >= height;\r\n\r\n        if (currentHorizontalState != this.horizontalState) {\r\n\r\n            this.horizontalState = currentHorizontalState;\r\n\r\n            if (currentHorizontalState) {\r\n                view.setDesignResolutionSize(this.originalWidth, this.originalHeigth, ResolutionPolicy.FIXED_WIDTH);\r\n\r\n                this.description.setPosition(this.originalDescriptionPosition);\r\n                this.variants.setPosition(this.originalVariantsPosition);\r\n            }\r\n            else {\r\n                view.setDesignResolutionSize(this.originalHeigth, this.originalWidth, ResolutionPolicy.FIXED_HEIGHT);\r\n\r\n                let pos = new Vec3(this.originalDescriptionPosition.y, -this.originalDescriptionPosition.x);\r\n                this.description.setPosition(pos);\r\n\r\n                pos = new Vec3(0, this.variantsVerticalOffset - this.originalVariantsPosition.x);\r\n                this.variants.setPosition(pos);\r\n            }\r\n        }\r\n\r\n        const ratio = currentHorizontalState ? height / width : width / height;\r\n        let scale = ratio / this.originalRatio;\r\n        if (scale > 1) scale = 1;\r\n        \r\n        this.description.setScale(scale, scale);\r\n        this.variants.setScale(scale, scale);\r\n    }\r\n}\r\n"]}