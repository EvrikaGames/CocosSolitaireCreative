{"version":3,"sources":["file:///D:/Cocos/CocosWordLineCreative/assets/scripts/connector/LettersConnectorController.ts"],"names":["_decorator","Component","input","Input","instantiate","Node","resources","TextAsset","UITransform","Vec2","Vec3","CrosswordController","ConnectorLetterComponent","LineGraphics","LettersLabelComponent","SoundController","ccclass","property","LettersConnectorController","type","letterNodes","selectedLetters","start","on","EventType","TOUCH_START","onTouch","TOUCH_MOVE","TOUCH_END","onEndTouch","TOUCH_CANCEL","load","err","textAsset","console","error","message","setup","text","onDestroy","off","config","lettersCount","length","uiTransform","getComponent","radiusRatio","i","letter","letterNode","parent","node","connectorLetter","setLetter","x","Math","sin","PI","y","cos","radius","width","setPosition","push","destroy","event","touchLocation","getUILocation","touchLocalPos","convertToNodeSpaceAR","getBoundingBox","contains","selected","changeState","lettersLabelComponent","updateText","getCurrentLetters","playSound","selectedLettersCount","splice","redrawLine","letters","crosswordWord","opened","crosswordContoller","openWord","wrongWordShake","forEach","result","touchPosition","points","pos","getPosition","lineGraphics","step","audioClip","sound","letter1","letter2","letter3","play"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, input, Input, instantiate, Node, resources, TextAsset, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { CrosswordController } from '../crossword/CrosswordController';\r\nimport { ConnectorLetterComponent } from '../ui/ConnectorLetterComponent';\r\nimport { LineGraphics } from '../ui/LineGraphics';\r\nimport { LettersLabelComponent } from '../ui/LettersLabelComponent';\r\nimport { CrosswordWord } from '../crossword/CrosswordWord';\r\nimport { SoundController } from '../sound/SoundController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('LettersConnectorController')\r\nexport class LettersConnectorController extends Component {\r\n\r\n    @property({type:Node})\r\n    private letterNode = null;\r\n\r\n    @property({type:LineGraphics})\r\n    private lineGraphics = null;\r\n\r\n    @property({type:LettersLabelComponent})\r\n    private lettersLabelComponent = null;\r\n\r\n    @property({type:CrosswordController})\r\n    private crosswordContoller = null;\r\n\r\n    @property({type:SoundController})\r\n    private sound = null;\r\n\r\n    private letterNodes: Node[]= [];\r\n    private selectedLetters: Node[]= [];\r\n\r\n    start () {\r\n        input.on(Input.EventType.TOUCH_START, this.onTouch, this);\r\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouch, this);\r\n\r\n        input.on(Input.EventType.TOUCH_END, this.onEndTouch, this);\r\n        input.on(Input.EventType.TOUCH_CANCEL, this.onEndTouch, this);\r\n\r\n        resources.load(\"configs/letters\", TextAsset, (err, textAsset) => {\r\n            if (err) {\r\n                console.error(err.message);\r\n                return\r\n            }\r\n\r\n            this.setup(textAsset.text);\r\n        });\r\n    }\r\n\r\n    onDestroy () {\r\n        input.off(Input.EventType.TOUCH_START, this.onTouch, this);\r\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouch, this);\r\n\r\n        input.off(Input.EventType.TOUCH_END, this.onEndTouch, this);\r\n        input.off(Input.EventType.TOUCH_CANCEL, this.onEndTouch, this);\r\n    }\r\n\r\n    setup(config: string) {\r\n        const lettersCount = config.length;\r\n        const uiTransform = this.getComponent(UITransform);\r\n        const radiusRatio = 0.72;\r\n\r\n        for (let i = 0; i < lettersCount; i++) {\r\n\r\n            let letter = config[i];\r\n\r\n            let letterNode = instantiate(this.letterNode);\r\n            letterNode.parent = this.node;\r\n\r\n            let connectorLetter = letterNode.getComponent(ConnectorLetterComponent);\r\n            connectorLetter.setLetter(letter);\r\n\r\n            let x = Math.sin(2 * Math.PI / lettersCount * i);\r\n            let y = Math.cos(2 * Math.PI / lettersCount * i);\r\n            const radius = uiTransform.width / 2;\r\n\r\n            x *= radius * radiusRatio;\r\n            y *= radius * radiusRatio;\r\n\r\n            letterNode.setPosition(x, y, 0);\r\n            this.letterNodes.push(letterNode);\r\n        }\r\n\r\n        this.letterNode.destroy();\r\n    }\r\n\r\n    onTouch(event: EventTouch) {\r\n        let touchLocation = event.getUILocation();\r\n        let touchLocalPos = this.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(touchLocation.x, touchLocation.y, 0));\r\n\r\n        touchLocation = new Vec2(touchLocalPos.x, touchLocalPos.y);\r\n\r\n        for (let i = 0; i < this.letterNodes.length; i++) {\r\n            let letterNode = this.letterNodes[i];\r\n            if (!letterNode.getComponent(UITransform).getBoundingBox().contains(touchLocation))\r\n                continue;\r\n\r\n            let connectorLetter = letterNode.getComponent(ConnectorLetterComponent);\r\n            if (!connectorLetter.selected) {\r\n                connectorLetter.changeState(true);\r\n                this.selectedLetters.push(letterNode);\r\n                this.lettersLabelComponent.updateText(this.getCurrentLetters());\r\n                this.playSound(this.selectedLetters.length);\r\n            }\r\n            else {\r\n                const selectedLettersCount = this.selectedLetters.length;\r\n                if (selectedLettersCount > 1 && this.selectedLetters[selectedLettersCount - 2] === letterNode) {\r\n                    this.selectedLetters[selectedLettersCount - 1].getComponent(ConnectorLetterComponent).changeState(false);\r\n                    this.selectedLetters.splice(selectedLettersCount - 1, 1);\r\n                    this.lettersLabelComponent.updateText(this.getCurrentLetters());\r\n                }\r\n            }\r\n        }\r\n\r\n        this.redrawLine(touchLocalPos);\r\n    }\r\n\r\n    onEndTouch(event: EventTouch) {\r\n\r\n        const letters = this.getCurrentLetters();\r\n        if (letters.length > 2) {\r\n\r\n            const {crosswordWord, opened} = this.crosswordContoller.openWord(letters);\r\n            if (opened) {\r\n                this.lettersLabelComponent.updateText(null);\r\n            }\r\n            else {\r\n                this.lettersLabelComponent.wrongWordShake(null);\r\n            }\r\n            \r\n        }\r\n        else {\r\n            this.lettersLabelComponent.updateText(null);\r\n        }\r\n        \r\n        this.selectedLetters.forEach(node => {\r\n            node.getComponent(ConnectorLetterComponent).changeState(false);\r\n        });\r\n\r\n        this.selectedLetters = [];\r\n        this.redrawLine(null);\r\n    }\r\n\r\n    getCurrentLetters(): string {\r\n        let result = '';\r\n        this.selectedLetters.forEach(node => {\r\n            result += node.getComponent(ConnectorLetterComponent).letter;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    redrawLine(touchPosition) {\r\n\r\n        let points: Vec2[]= [];\r\n        \r\n        if (this.selectedLetters.length > 0) {\r\n\r\n            this.selectedLetters.forEach(letterNode => {\r\n                let pos = letterNode.getPosition();\r\n                points.push(new Vec2(pos.x, pos.y));\r\n            });\r\n\r\n            points.push(new Vec2(touchPosition.x, touchPosition.y));\r\n        }\r\n\r\n        this.lineGraphics.redrawLine(points);\r\n    }\r\n    \r\n    playSound(step: number) {\r\n        let audioClip = this.sound.letter1;\r\n        if (step == 2) audioClip = this.sound.letter2;\r\n        else if (step >= 3) audioClip = this.sound.letter3;\r\n        this.sound.play(audioClip);\r\n    }\r\n}\r\n\r\n"]}