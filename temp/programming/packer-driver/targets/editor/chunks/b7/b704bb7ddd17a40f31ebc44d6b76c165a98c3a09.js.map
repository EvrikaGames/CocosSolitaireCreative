{"version":3,"sources":["file:///D:/Cocos/CocosSolitaireCreative/assets/scripts/wordConnect/spelling/SpellingLetter.ts"],"names":["_decorator","Color","Component","Label","Sprite","tween","Vec3","ccclass","property","SpellingLetter","type","letterColor","emptyColor","set","letter","charAt","background","color","text","string","toUpperCase","scaleTween","startDuration","node","delay","call","to","scale","ONE"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAeC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;;;OAC9D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;gCAGjBS,c,WADZF,OAAO,CAAC,gBAAD,C,UAMHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACP;AAAN,OAAD,C,UAGRK,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACN;AAAN,OAAD,C,2BATb,MACaK,cADb,SACoCP,SADpC,CAC8C;AAAA;AAAA;AAAA,eAEzBS,WAFyB,GAEH,IAAIV,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,CAFG;AAAA,eAGzBW,UAHyB,GAGJ,IAAIX,KAAJ,CAAU,GAAV,EAAe,EAAf,EAAmB,GAAnB,EAAwB,GAAxB,CAHI;;AAAA;;AAAA;AAAA;;AAW1CY,QAAAA,GAAG,CAACC,MAAD,EAAiB;AAChBA,UAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAc,CAAd,CAAT;;AAEA,cAAID,MAAM,KAAK,GAAf,EAAmB;AACf,iBAAKE,UAAL,CAAgBC,KAAhB,GAAwB,KAAKN,WAA7B;AACH,WAFD,MAGK;AACD,iBAAKK,UAAL,CAAgBC,KAAhB,GAAwB,KAAKL,UAA7B;AACH;;AAED,eAAKM,IAAL,CAAUC,MAAV,GAAmBL,MAAM,CAACM,WAAP,EAAnB;AACH;;AAEDC,QAAAA,UAAU,CAACP,MAAD,EAAiBQ,aAAjB,EAAsD;AAE5D,iBAAOjB,KAAK,CAAC,KAAKkB,IAAN,CAAL,CACFC,KADE,CACIF,aADJ,EAEFG,IAFE,CAEG,MAAM;AACR,iBAAKZ,GAAL,CAASC,MAAT;AACH,WAJE,EAKFY,EALE,CAKC,IALD,EAKO;AAAEC,YAAAA,KAAK,EAAE,IAAIrB,IAAJ,CAAS,IAAT,EAAe,IAAf,EAAqB,IAArB;AAAT,WALP,EAMFoB,EANE,CAMC,IAND,EAMO;AAAEC,YAAAA,KAAK,EAAErB,IAAI,CAACsB;AAAd,WANP,CAAP;AAOH;;AAjCyC,O;;;;;iBAM3B,I;;;;;;;iBAGM,I","sourcesContent":["import { _decorator, Color, Component, Label, Sprite, Tween, tween, Vec3, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpellingLetter')\r\nexport class SpellingLetter extends Component {\r\n    \r\n    private readonly letterColor : Color = new Color(159, 169, 205, 255);\r\n    private readonly emptyColor : Color = new Color(175, 54, 179, 255);\r\n\r\n    @property({type:Label})\r\n    private text = null;\r\n\r\n    @property({type:Sprite})\r\n    private background = null;\r\n    \r\n    set(letter: string) {\r\n        letter = letter.charAt(0);\r\n\r\n        if (letter === ' '){\r\n            this.background.color = this.letterColor;\r\n        }\r\n        else {\r\n            this.background.color = this.emptyColor;\r\n        }\r\n\r\n        this.text.string = letter.toUpperCase();\r\n    }\r\n\r\n    scaleTween(letter: string, startDuration: number) : Tween<Node> {\r\n        \r\n        return tween(this.node)\r\n            .delay(startDuration)\r\n            .call(() => {\r\n                this.set(letter);\r\n            })\r\n            .to(0.25, { scale: new Vec3(1.25, 1.25, 1.25)})\r\n            .to(0.25, { scale: Vec3.ONE });\r\n    }\r\n}\r\n"]}