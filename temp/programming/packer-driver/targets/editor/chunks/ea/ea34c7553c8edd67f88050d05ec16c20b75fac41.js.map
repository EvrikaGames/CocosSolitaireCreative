{"version":3,"sources":["file:///D:/Cocos/CocosWordLineCreative/assets/scripts/hint/HintController.ts"],"names":["_decorator","Button","Component","Label","CrosswordController","SoundController","ccclass","property","HintController","type","hintCount","start","button","node","on","EventType","CLICK","onClick","label","string","tryOpenRandomLetters","sound","play","hint","crosswordController","checkWinCondition","count","result","closedCells","crossword","cells","filter","cell","opened","i","length","index","Math","floor","random","changeState","splice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;;AAC/BC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,e,iBAAAA,e;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;gCAGjBQ,c,WADZF,OAAO,CAAC,gBAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,UAGRF,QAAQ,CAAC;AAACE,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,UAGRF,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACR;AAAN,OAAD,C,UAGRM,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACN;AAAN,OAAD,C,2BAZb,MACaK,cADb,SACoCN,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAclCQ,SAdkC,GAcd,CAdc;AAAA;;AAgB1CC,QAAAA,KAAK,GAAG;AACJ,eAAKC,MAAL,CAAYC,IAAZ,CAAiBC,EAAjB,CAAoBb,MAAM,CAACc,SAAP,CAAiBC,KAArC,EAA4C,KAAKC,OAAjD,EAA0D,IAA1D;AACA,eAAKC,KAAL,CAAWC,MAAX,GAAoB,KAAKT,SAAzB;AACH;;AAEDO,QAAAA,OAAO,CAAEL,MAAF,EAAkB;AACrB,cAAI,KAAKF,SAAL,GAAiB,CAArB,EAAwB;;AAExB,cAAI,KAAKU,oBAAL,CAA0B,CAA1B,CAAJ,EAAkC;AAC9B,iBAAKV,SAAL;AACA,iBAAKQ,KAAL,CAAWC,MAAX,GAAoB,KAAKT,SAAzB;AAEA,iBAAKW,KAAL,CAAWC,IAAX,CAAgB,KAAKD,KAAL,CAAWE,IAA3B;AACA,iBAAKC,mBAAL,CAAyBC,iBAAzB;AACH;AACJ;;AAEDL,QAAAA,oBAAoB,CAACM,KAAD,EAAyB;AAEzC,cAAIC,MAAM,GAAG,KAAb;AACA,cAAIC,WAAW,GAAG,KAAKJ,mBAAL,CAAyBK,SAAzB,CAAmCC,KAAnC,CAAyCC,MAAzC,CAAgDC,IAAI,IAAI,CAACA,IAAI,CAACC,MAA9D,CAAlB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAApB,EAA2BQ,CAAC,EAA5B,EAAgC;AAE5B,gBAAIN,WAAW,CAACO,MAAZ,KAAuB,CAA3B,EAA8B;AAE9B,gBAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,WAAW,CAACO,MAAvC,CAAZ;AACAP,YAAAA,WAAW,CAACQ,KAAD,CAAX,CAAmBI,WAAnB,CAA+B,IAA/B;AACAZ,YAAAA,WAAW,CAACa,MAAZ,CAAmBL,KAAnB,EAA0B,CAA1B;AACAT,YAAAA,MAAM,GAAG,IAAT;AACH;;AAED,iBAAOA,MAAP;AACH;;AAhDyC,O;;;;;iBAGZ,I;;;;;;;iBAGd,I;;;;;;;iBAGC,I;;;;;;;iBAGD,I","sourcesContent":["import { _decorator, Button, Component, Label, Node } from 'cc';\r\nimport { CrosswordController } from '../crossword/CrosswordController';\r\nimport { SoundController } from '../sound/SoundController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HintController')\r\nexport class HintController extends Component {\r\n\r\n    @property({type:CrosswordController})\r\n    private crosswordController = null;\r\n\r\n    @property({type:SoundController})\r\n    private sound = null;\r\n\r\n    @property({type:Button})\r\n    private button = null;\r\n\r\n    @property({type:Label})\r\n    private label = null;\r\n\r\n    private hintCount: number = 5;\r\n\r\n    start() {\r\n        this.button.node.on(Button.EventType.CLICK, this.onClick, this);\r\n        this.label.string = this.hintCount;\r\n    }\r\n\r\n    onClick (button: Button) {\r\n        if (this.hintCount < 1) return;\r\n\r\n        if (this.tryOpenRandomLetters(1)) {\r\n            this.hintCount--;\r\n            this.label.string = this.hintCount;\r\n\r\n            this.sound.play(this.sound.hint);\r\n            this.crosswordController.checkWinCondition();\r\n        }\r\n    }\r\n\r\n    tryOpenRandomLetters(count: number): boolean {\r\n\r\n        let result = false;\r\n        let closedCells = this.crosswordController.crossword.cells.filter(cell => !cell.opened);\r\n        for (let i = 0; i < count; i++) {\r\n\r\n            if (closedCells.length === 0) break;\r\n\r\n            let index = Math.floor(Math.random() * closedCells.length);\r\n            closedCells[index].changeState(true);\r\n            closedCells.splice(index, 1);\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n"]}