{"version":3,"sources":["file:///D:/Cocos/work/CocosSolitaireCreative/assets/scripts/solitaire/Card.ts"],"names":["_decorator","Component","find","Label","Node","Vec3","tween","UITransform","Quat","Prefab","instantiate","GameController","ccclass","property","Card","num","cardData","initialPosition","isSelected","isRevealed","canTouch","init","label","string","letter","back","active","revealed","node","position","backYellow","reveal","hide","onEnable","on","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onDisable","off","event","index","emit","VARIANTS_UPDATED","game","getComponentInChildren","closestSlot","moveCardToWord","getComponent","setTimeout","moveTo","targetWorldPos","parentUI","parent","console","warn","localTarget","convertToNodeSpaceAR","to","eulerAngles","rotationAngle","start","moveToCompleteWord","worldPos","localPos","call","unschedule","createCircle","scale","ZERO","removeCard","schedule","bind","Math","ceil","newCircle","circle","getWorldPosition","setPosition","setSiblingIndex","getSiblingIndex","setScale","getScale","clone","destroy","returnCardToPosition","setRotation","getLetter","setNum","getNumber"],"mappings":"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","sourcesContent":["import { _decorator, Component, find, Label, Node, Vec3, Event, EventTouch, Canvas, tween, UITransform, Quat, Sprite, Prefab, instantiate } from 'cc';\r\nimport { ICardData } from './ICardData';\r\nimport GameController from './GameController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class Card extends Component {\r\n    @property(Label)\r\n    label: Label = null;\r\n\r\n    @property(Node)\r\n    back: Node = null;\r\n\r\n    @property(Node)\r\n    backYellow: Node = null;\r\n\r\n    @property(Prefab)\r\n    circle: Prefab = null;\r\n\r\n    num: number;\r\n\r\n    private cardData: ICardData;\r\n    private initialPosition: Vec3;\r\n    isSelected: boolean = false;\r\n    isRevealed: boolean = false;\r\n\r\n    @property\r\n    rotationAngle: number = 360;\r\n\r\n    private canTouch: boolean = true;\r\n\r\n\r\n    init(cardData: ICardData) {\r\n        this.cardData = cardData;\r\n        this.label.string = cardData.letter;\r\n        this.back.active = !cardData.revealed; \r\n        this.isRevealed = cardData.revealed; \r\n        this.initialPosition = new Vec3(this.node.position);\r\n        this.backYellow.active = false;\r\n\r\n        \r\n    }\r\n\r\n    reveal() {\r\n        this.back.active = false;\r\n        this.isRevealed = true;\r\n    }\r\n    hide(){\r\n        this.back.active = true;\r\n        this.isRevealed = false;\r\n    }\r\n\r\n    onEnable() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        //this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n    }\r\n\r\n    onDisable() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        //this.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        \r\n    }\r\n\r\n\r\n\r\n        onTouchEnd(event) {\r\n            if (!this.canTouch) {\r\n                return;\r\n            }\r\n        \r\n            if (this.isRevealed) {\r\n                this.canTouch = false; \r\n        \r\n                const index = event.index;\r\n                this.node.emit(GameController.VARIANTS_UPDATED, { index: index });\r\n                const game = find('Canvas').getComponentInChildren('GameController') as GameController;\r\n                const closestSlot = game.moveCardToWord(this.node.getComponent(Card));\r\n        \r\n                setTimeout(() => {\r\n                    this.canTouch = true;\r\n                }, 700); \r\n            }\r\n        }\r\n    moveTo(targetWorldPos: Vec3){\r\n        const parentUI = this.node.parent.getComponent(UITransform);\r\n        if (!parentUI) {\r\n            console.warn(\"Родительский узел не содержит UITransform\");\r\n            return;\r\n        }\r\n        const localTarget = parentUI.convertToNodeSpaceAR(targetWorldPos);\r\n        tween(this.node)\r\n            .to(0.2, {\r\n                position: localTarget,\r\n                eulerAngles: new Vec3(0, 0, -this.rotationAngle)\r\n            })\r\n            .start();\r\n        this.backYellow.active = false;\r\n    }\r\n\r\n    moveToCompleteWord(worldPos: Vec3){\r\n        const localPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(worldPos);\r\n\r\n        tween(this.node)\r\n        .to(0.5, { position: localPos })\r\n        .call(() => {\r\n            this.unschedule(this.createCircle);\r\n        })\r\n        .to(0.5, { scale: Vec3.ZERO }) \r\n        .call(() => {\r\n            this.removeCard();\r\n        })\r\n        .start();\r\n    \r\n        this.schedule(this.createCircle.bind(this), 0.005, Math.ceil(0.1 / 0.005));\r\n    }\r\n    \r\n    \r\n    createCircle() {\r\n        const newCircle = instantiate(this.circle);\r\n        newCircle.parent = this.node.parent;\r\n    \r\n        const worldPos = this.node.getWorldPosition();\r\n        const localPos = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(worldPos);\r\n        newCircle.setPosition(localPos);\r\n    \r\n        newCircle.setSiblingIndex(this.node.getSiblingIndex());\r\n    \r\n        newCircle.setScale(this.node.getScale().clone());\r\n    \r\n\r\n        tween(newCircle)\r\n            .to(0.3, { scale: new Vec3(0, 0, 0) }) \r\n            .call(() => {\r\n                newCircle.destroy();\r\n            })\r\n            .start();\r\n    }\r\n    \r\n    \r\n    \r\n        \r\n\r\n\r\n    removeCard(){this.node.destroy();}\r\n    returnCardToPosition(){\r\n        this.node.setRotation(new Quat(0, 0, 0));\r\n        tween(this.node)\r\n            .to(0.2, {\r\n                position: this.initialPosition,\r\n            })\r\n            .start();\r\n        this.backYellow.active = false;\r\n        \r\n    }\r\n    getLetter(){return this.cardData.letter;}\r\n    setNum(num: number){this.num = num;}\r\n    getNumber(){return this.num;}\r\n}\r\n"]}